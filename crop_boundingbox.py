# -*- coding: utf-8 -*-
"""crop_boundingbox.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1OODcEZA5BH9Od8vPOdAPfQ_oDkcaKeDG
"""

import os
from PIL import Image

# 경로 설정
image_dir = "/content/drive/MyDrive/dataset/atm_dataset"
label_dir = "/content/drive/MyDrive/dataset/labels"
output_root = "/content/drive/MyDrive/dataset/cropped_defects"
class_names = ["dent", "nick", "scratch"]  # YOLO 클래스 순서대로

os.makedirs(output_root, exist_ok=True)

def yolo_to_pixel_box(line, img_w, img_h):
    cls_id, cx, cy, w, h = map(float, line.strip().split())
    x1 = int((cx - w/2) * img_w)
    y1 = int((cy - h/2) * img_h)
    x2 = int((cx + w/2) * img_w)
    y2 = int((cy + h/2) * img_h)
    return int(cls_id), x1, y1, x2, y2

processed = 0

# 🔍 모든 하위 폴더의 이미지 순회
for root, dirs, files in os.walk(image_dir):
    for fname in files:
        if not fname.lower().endswith((".png", ".jpg", ".jpeg")):
            continue

        basename = os.path.splitext(fname)[0]
        img_path = os.path.join(root, fname)
        label_path = os.path.join(label_dir, f"{basename}.txt")

        if not os.path.exists(label_path):
            print(f"⚠️ 라벨 없음: {fname}")
            continue

        image = Image.open(img_path)
        img_w, img_h = image.size

        with open(label_path, "r") as f:
            lines = f.readlines()

        for idx, line in enumerate(lines):
            cls_id, x1, y1, x2, y2 = yolo_to_pixel_box(line, img_w, img_h)
            class_name = class_names[cls_id]
            save_dir = os.path.join(output_root, class_name)
            os.makedirs(save_dir, exist_ok=True)

            cropped = image.crop((x1, y1, x2, y2))
            save_path = os.path.join(save_dir, f"{basename}.png")
            cropped.save(save_path)

        processed += 1

print(f"\n✅ 총 {processed}개 이미지 처리 완료 (하위 디렉토리 포함)")